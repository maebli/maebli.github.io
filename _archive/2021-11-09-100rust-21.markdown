---
layout: post
title:  "Rust challenge 21/100 - euler challange 5"
date:   2021-11-09 21:00:00 +0100
categories: rust
redirect_from:
  - /post/2021-11-09-100rust-21
---

*Note: This  example uses brute force, which, while teachin me things about Rust's Functional Programming Features, is not a very elegant solution to the given problem. It will stop before computing the result if running in Debug Compiled mode.*

#  Table of content
<!-- MarkdownTOC autolink="true" -->

- [What is this :grey_question:](#what-is-this-grey_question)
- [21st Challenge](#21st-challenge)
	- [Challenge](#challenge)
	- [Solution :white_check_mark:](#solution-white_check_mark)

<!-- /MarkdownTOC -->

## What is this :grey_question: 

The rules of the game are explained [in my original post](https://maebli.github.io/rust/2021/10/18/100rust.html). 

## 21st Challenge
### Challenge

Solve euler challange number 5.

### Solution :white_check_mark:

	{% highlight rust %}
	//Problem 5
	// [](https://projecteuler.net/problem=5)
	// 2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.
	// What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
	fn main() {
	    
	    let x =(1..)
	        .filter(|x| {(1..20).fold(0,|total,next|{total+x%next}) ==0} )
	        .take(1)
	        .last();
	    println!("{}",x.unwrap());

	}
	{% endhighlight %}


To see the full source see [github](https://github.com/maebli/100rustsnippets/tree/master/euler-5) and see the live demo in [playground](https://play.rust-lang.org/?version=stable&edition=2018&gist=b2d2a90fee395282ad70412ea7cd2a54). 
