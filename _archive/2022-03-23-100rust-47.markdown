---
layout: post
title:  "Rust challenge 47/100 - hector tutorial "
date:   2022-03-23 21:00:00 +0100
categories: rust
redirect_from:
  - /post/2022-03-23-100rust-47
---


#  Table of content
<!-- MarkdownTOC autolink="true" -->

- [What is this :grey_question:](#what-is-this-grey_question)
- [47th Challenge](#47th-challenge)
	- [Challenge](#challenge)
	- [Solution :white_check_mark:](#solution-white_check_mark)

<!-- /MarkdownTOC -->

## What is this :grey_question: 

The rules of the game are explained [in my original post](https://maebli.github.io/rust/2021/10/18/100rust.html). 

## 47th Challenge
### Challenge

Tody I will be looking at [chapter 2 of the hecto tutorial](https://www.philippflenker.com/hecto-chapter-2/).
Its the basics to get a  DIY text editor working. 

### Solution :white_check_mark:

I learnt to read raw text input from `stdio` and how it differs to none-raw text input. For now I'm just returning what is entered. 

	{% highlight rust %}
	use std::io::stdout;

	use crossterm::event::poll;
	use crossterm::{
	    cursor::position,
	    event::{read, DisableMouseCapture, EnableMouseCapture, Event, KeyCode},
	    execute,
	    terminal::{disable_raw_mode, enable_raw_mode},
	    Result,
	};

	use crossterm::event::KeyCode::Char;
	use crossterm::style::Print;
	use std::time::Duration;

	fn print_events() -> Result<()> {
	    loop {
	        let event = read()?;
	        if let Event::Key(x) = event {
	            match x.code {
	                Char('q') => return Ok(()),
	                Char(x) => {
	                    execute!(stdout(), Print(x.to_string()));
	                },
	                _Enter => {
	                    execute!(stdout(), Print("\n\r".to_string()));
	                }
	                _ => {
	                    execute!(
	                        stdout(),
	                        Print("special character".to_string())
	                    );
	                }
	            }
	        }
	    }
	}

	fn main() -> Result<()> {
	    enable_raw_mode()?;

	    if let Err(e) = print_events() {
	        println!("Error: {:?}\r", e);
	    }

	    disable_raw_mode()
	}

	{% endhighlight %}

See [github](https://github.com/maebli/100rustsnippets/tree/master/hector) for today's simple snippet. 

