---
layout: post
title:  "Rust challenge 68/100 - aoc 2022 day6"
date:   2022-12-06 15:05:00 +0100
categories: rust
redirect_from:
  - /rust/2022/12/06/100rust-68
---


#  Table of content
<!-- MarkdownTOC autolink="true" -->

- [What is this :grey_question:](#what-is-this-grey_question)
- [68th Challenge](#68th-challenge)
    - [Challenge](#challenge)
    - [Solution :white_check_mark:](#solution-white_check_mark)

<!-- /MarkdownTOC -->

## What is this :grey_question: 

The rules of the game are explained [in my original](https://maebli.github.io/rust/2021/10/18/100rust.html). 

## 68th Challenge
### Challenge

Solve today's AOC challange.ðŸŽ…ðŸ¦€

### Solution :white_check_mark:

Here's my solution, today was really easy in my opinion :)

    {% highlight rust %}
     use std::collections::HashSet;

    fn main() {
       let ans1 = get_signal_start_offset(include_str!("../input.txt"),4);
       println!("answer 1: {}", ans1);
       let ans1 = get_signal_start_offset(include_str!("../input.txt"),14);
       println!("answer 1: {}", ans1);
    }

    fn get_signal_start_offset(signal:&str,length:usize) -> usize {
        signal.as_bytes()
              .windows(length)
              .enumerate()
              .filter(|w| {
                    w.1.into_iter().fold(HashSet::new(), |mut acc, c| {
                        acc.insert(*c);
                        acc
                    }).len() == length
                }
            ).next()
            .unwrap()
            .0+length
    }

    /* create tests */
    #[cfg(test)]
    mod tests {
        use super::*;

        #[test]
        fn test1() {
            assert_eq!(get_signal_start_offset("bvwbjplbgvbhsrlpgdmjqwftvncz",4), 5);
            assert_eq!(get_signal_start_offset("nppdvjthqldpwncqszvftbrmjlhg",4), 6);
            assert_eq!(get_signal_start_offset("nznrnfrfntjfmvfwmzdfjlvtqnbhcprsg",4), 10);
            assert_eq!(get_signal_start_offset("zcfzfwzzqfrljwzlrfnpqdbhtmscgvjw",4), 11); 
            assert_eq!(get_signal_start_offset("mjqjpqmgbljsphdztnvjfqwrcgsmlb",14), 19);
        }
    }
    {% endhighlight %}
