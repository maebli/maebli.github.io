---
layout: post
title:  "Rust challenge 37/100 - advent of code 2021 day 7 part 1 & 2"
date:   2021-12-07 21:00:00 +0100
categories: rust
redirect_from:
  - /post/2021-12-07-100rust-37
---


#  Table of content
<!-- MarkdownTOC autolink="true" -->

- [What is this :grey_question:](#what-is-this-grey_question)
- [37th Challenge](#37th-challenge)
	- [Challenge](#challenge)
	- [Solution :white_check_mark:](#solution-white_check_mark)

<!-- /MarkdownTOC -->
![](/assets/img/aoc-squid.png)
## What is this :grey_question: 

The rules of the game are explained [in my original post](https://maebli.github.io/rust/2021/10/18/100rust.html). 

## 37th Challenge
### Challenge

Today I'm solving today's [AoC day 7 2021](https://adventofcode.com/2021/day/7).

### Solution :white_check_mark:

This challenge was fun, more brute force friendly than yesterdays challenge. 

	{% highlight rust %}
	fn main() {

	    let mut v =INPUT.split(",")
	        .map(|x| x.parse::<i32>().unwrap())
	        .collect::<Vec<i32>>();

	    v.sort();

	    let c = v.len();

	    let median = match c%2 {
	        1 => *v.get(c/2).unwrap() as f32,
	        _ => ((v.get(c/2-1).unwrap()+v.get(c/2).unwrap()) as f32).abs() / 2f32
	    };

	    println!("sol1:{}",v.iter().fold(0,|acc,inst|{acc+(*inst-(median as i32)).abs()}));

	    let x = (0..*(v.get(v.len()-1).unwrap()))
	        .fold(i32::MAX,|acc, k|
	            {(v.iter()
	                .fold(0,|acc,inst|acc+find_fuel2((*inst-k).abs()))
	            ).min(acc)
	            }
	        );

	    println!("sol2:{}",x);
	}

	fn find_fuel2(x: i32) -> i32{
	     x*(x+1)/2
	}

	const INPUT:&str = "16,1,2,0,4,2,7,1,2,14";

	{% endhighlight %}

[github](https://github.com/maebli/100rustsnippets/tree/master/aoc-2021-day7)
[playground](https://play.rust-lang.org/?version=stable&edition=2021&gist=d2cb739f7d536d226a3994feec0d1e7c)

